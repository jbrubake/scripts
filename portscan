#!/bin/sh
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2014 Jeremy Brubaker <jbru362@gmail.com>
#
# abstract: hasty portscan script when nmap is not available
#
print_help() {
    [ -n "$1" ] && printf '%s\n' "$1"
}

isport() {
    case $1 in *[![:digit:]]*) return 1 ;; esac
    [ "$1" -gt 65535 ] && return 1
    return 0
}

getrange() {
    a=$(echo "$1" | cut -d- -f1)
    b=$(echo "$1" | cut -d- -f2)

    isport "$a" || return
    isport "$b" || return

    seq "$a" "$b"
}

case $# in
    1) print_help "$0: missing ports to scan"; exit 1;;
    0) print_help "$0: missing host to scan"; exit 1;;
esac

host=$1; shift
ports=
for p in $(echo "$1" | tr ',' ' '); do
    case $p in
        *-*) ports="$ports $(getrange "$p")" ;;
        *)   isport "$p" && ports="$ports $p" ;;
    esac
done

for p in $ports; do
    printf '%s...' "$p"
    # if nc -zw 3 $host $p 2>&1; then
        printf 'open\n'
    # else
        # printf 'closed\n'
    # fi
done

