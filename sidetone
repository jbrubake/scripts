#!/bin/sh
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2024 Jeremy Brubaker <jbru362@gmail.com>
#
# abstract: enable headset sidetone
#
# Based on https://www.bentasker.co.uk/posts/documentation/linux/adding-mic-monitoring-to-headphone-output-on-linux.html
#
# Defaults {{{1
SRC_DFLT=@DEFAULT_AUDIO_SRC@
SINK_DFLT=@DEFAULT_AUDIO_SINK@
LATENCY_DFLT=0

# Documentation {{{1
#
VERSION='1.0'

print_help() {
    [ -n "$2" ] && printf "%s\n" "$2"
    cat <<EOF
Usage: $0 [OPTION] <subcommand> [SOURCE] [SINK]

Control audio sidetone. Default action is to enable it.

Commands:
 start           start sidetone
 stop            stop sidetone

Options: 
 -V              display version info and exit
 -h              display this help and exit
EOF
} >&2

print_version() {
    cat <<EOF
$PROGNAME $VERSION
Copyright (C) 2024 Orion Arts
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jeremy Brubaker.
EOF
}

# Process options {{{1
#
cmd=start
latency=$LATENCY_DFLT
while getopts ':l:Vh' opt; do
    case $opt in
        l) latency=$OPTARG ;;
        V) print_version; exit ;;
        h|?) print_help; exit ;;
    esac
done
shift $((OPTIND - 1))
OPTIND=1

if [ $# -ge 1 ]; then
    cmd=$1; shift
else
    cmd=
fi
src=${1:-SRC_DFLT}
sink=${2:-SINK_DFLT}

# Functions {{{1
#
have() { command -v "$1" >/dev/null; }

stop_sidetone() {
    echo stop >&2
    pactl unload-module module-loopback
}

start_sidetone() {
    echo start >&2
    pactl load-module module-loopback \
        source=$1 \
        sink=$2 \
        latency_msec=${3:-0}
}

# Main {{{1
#
if ! have pactl; then
    printf '%s\n' 'pactl not found' >&2
    exit 1
fi

case $cmd in
    start) start_sidetone "$src" "$sink" "$latency" ;;
    stop) stop_sidetone ;;
    *) ;;
esac

