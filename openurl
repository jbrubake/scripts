#!/bin/bash
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2014 Jeremy Brubaker <jbru362@gmail.com>
#

# openurl
#
# Open an URL in browser
#
# Uses environment variable $BROWSER as follows:
#
# firefox -> firefx (opens new tab) This is the default
# chrome  -> Google Chrome
# links   -> links
# glinks  -> links -g
# elinks  -> elinks
#
# Expects: URL to open. You can open local files simply
#          by passing the filename as the arguemt to openurl
#

# TODO: See about making this a function

# See if args are a local file first
if [ -f "$1" ]; then
    url="file://$1"
# Otherwise assume its a web URL
else
    url=$1
fi

# Run user's selected browser
case "$BROWSER" in
    # Google Chrome
    chrome)
        chrome $url &
        ;;

    # Console links
    elinks)
        elinks $url
        ;;

    links)
        links $url
        ;;

    # Graphical links
    glinks)
        case "$TERM" in
            # In VTY use links -g
            linux)
                links -g $url
                ;;
            # Remote shell
            putty*)
                links -g $url
                ;;
            # Running under X
            *)
                exec links -g $url &
                ;;
        esac
        ;;

    # firefox
    # This is the default
    firefox|*)
        # Use `which mozilla` so we don't keep
        # calling this function.
        # (I did it before it OOM'd on me)
        `which mozilla` -remote "ping()" 2> /dev/null

        # $? == 0 if mozilla is running
        # $? == 2 if mozilla is not running
        if [ $? -eq 2 ]; then
            # Open a new window if mozilla is not running
            exec `which mozilla` "$url" &
        else
            # Open a new tab if mozilla is running
            exec `which mozilla` -remote "openurl($url, new-tab)"
        fi
        ;;
esac
